{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","Key","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","Footer","href","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updateTask","length","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01ebb6d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n      \r\n    return (\r\n         <button \r\n         onClick={onClick}\r\n         style={{ backgroundColor: color }} \r\n         className='btn'> {text} </button>\r\n   )\r\n}\r\n\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes ={\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    \r\n\r\n        return (\r\n            <header className='header'>\r\n                <h1>{title}</h1>\r\n                <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n                \r\n            </header>\r\n        )\r\n    }\r\n    \r\n    Header.defaultProps = {\r\n        title: 'My Task Tracker',\r\n    }\r\n    \r\n    Header.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    }\r\n\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ Key, task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : '' }`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} \r\n            < FaTimes \r\n            style={{color: 'red', cursor: 'pointer' }} \r\n            onClick={() => onDelete(task.id)} \r\n            /> \r\n            </h3>\r\n            <p>{task.day}</p>\r\n        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react';\r\nimport Task from './Task';\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n    return (\r\n        <div>\r\n        {tasks.map((task) => (\r\n            <Task  key={task.id} task={task} \r\n            onDelete={onDelete}\r\n            onToggle={onToggle}\r\n            />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React, { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [ text, setText ] = useState('')\r\n    const [ day, setDay ] = useState('')\r\n    const [ reminder, setReminder ] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Pls add Text')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label htmlFor=\"\">Task</label>\r\n                <input type=\"text\" placeholder='Add Task' \r\n                value={text} \r\n                onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label htmlFor=\"\">Day & Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time' \r\n                value={day} \r\n                onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label htmlFor=\"\">Set Reminder</label>\r\n                <input type=\"checkbox\" \r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save Task\" className='btn btn-block'/>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <a href=\"/about\">About</a>\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1>Version 1.0.0</h1>\r\n            <a href=\"/\">Go Back</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\n\nconst App = () => {\n\n  const [ showAddTask, setShowAddTask ] = useState(false)\n  const [ tasks, setTasks ] = useState([]) \n\n  useEffect(() => {\n    const getTasks =  async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fecth Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n\n  // Fecth Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n      const addTask = async (task) => {\n        const res = await fetch('http://localhost:5000/tasks', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(task)\n        })\n\n        const data = await res.json()\n\n        setTasks([...tasks, data])\n\n        // const id = Math.floor(Math.random() * 10000) + 1\n        // const newTask = { id, ...task }\n        // setTasks([...tasks, newTask])\n      }\n\n      // Delete Task\n      const deleteTask = async (id) => {\n        await fetch(`http://localhost:5000/tasks/${id}`, {\n          method: 'DELETE'\n        })\n\n         setTasks(tasks.filter((task) => task.id !== id))\n      }\n \n\n      // Toggle Reminder\n      const toggleReminder = async (id) => {\n        const taskToToggle = await fetchTask(id)\n        const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n        const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(updateTask)\n        })\n\n        const data = await res.json()\n\n\n\n        setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n      }\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header title='My Task Tracker' onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n\n      {showAddTask && <AddTask onAdd={addTask}/>}\n\n      {tasks.length > 0 ? (\n         <Tasks tasks={tasks} onDelete={deleteTask} \n         onToggle={toggleReminder}/> \n         ) : ( 'NO TASK TO DO' ) }\n\n         <Route path='/about' component={About} />\n\n        <Footer />\n      \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}